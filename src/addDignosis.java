
import javax.swing.JOptionPane;
import java.sql.*;
import javax.swing.table.DefaultTableModel;
import net.proteanit.sql.DbUtils;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 * 
 * @author TheGenius
 */
public class addDignosis extends javax.swing.JFrame {
    public int flag=0;
    private final String url =
        "jdbc:sqlserver://localhost:1433;" +
         "databaseName=HospitalManagement;integratedSecurity=true;" +
         "encrypt=true;trustServerCertificate=true";
    /**
     * Creates new form addDignosis
     */
    public addDignosis() {
        initComponents();
        isExist.setVisible(false);
        typeWardslabel.setVisible(false);
        TypeWards.setVisible(false);
      loadjdbc.init();

    }
    
public boolean checkPatientExistence(String patientID) {
    Connection con = null;
    Statement stmt = null;
    ResultSet result = null;
    boolean patientExists = false;

    try {
        con = DriverManager.getConnection(url);
        stmt = con.createStatement();
        String countQuery = "SELECT COUNT(*) FROM Patiant_manu WHERE P_ID = '" + patientID + "'";
        result = stmt.executeQuery(countQuery);

        if (result.next() && result.getInt(1) > 0) {
            patientExists = true;
             flag = 1;
             isExist.setVisible(false);
        }
        else {
                isExist.setVisible(true);
        }
    } catch (SQLException ex) {
        JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
    } finally {
        try {
            if (result != null) result.close();
            if (stmt != null) stmt.close();
            if (con != null) con.close();
        } catch (SQLException ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Error closing database resources: " + ex.getMessage());
        }
    }
    return patientExists;
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        pIDTextfield = new javax.swing.JTextField();
        Search = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        isExist = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        SymptomtextField = new javax.swing.JTextField();
        DiaTextfield = new javax.swing.JTextField();
        medicalTextfield = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        typeWardslabel = new javax.swing.JLabel();
        wardcheckBox = new javax.swing.JCheckBox();
        TypeWards = new javax.swing.JComboBox<>();
        Savedbtn = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(600, 200));
        setUndecorated(true);

        jLabel1.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel1.setText("Patiant ID");

        pIDTextfield.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N

        Search.setFont(new java.awt.Font("Tahoma", 1, 11)); // NOI18N
        Search.setIcon(new javax.swing.ImageIcon(getClass().getResource("/find.png"))); // NOI18N
        Search.setText("Search");
        Search.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SearchActionPerformed(evt);
            }
        });

        jTable1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Title 1", "Title 2", "Title 3"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        isExist.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        isExist.setForeground(new java.awt.Color(255, 51, 51));
        isExist.setText("Patiant ID does not Exist!");

        jLabel3.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel3.setText("Symptom's");

        jLabel4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel4.setText("diagnosis");

        jLabel5.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel5.setText("Medicals");

        SymptomtextField.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        SymptomtextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SymptomtextFieldActionPerformed(evt);
            }
        });

        DiaTextfield.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N

        medicalTextfield.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N

        jLabel6.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jLabel6.setText("Ward Required?");

        typeWardslabel.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        typeWardslabel.setText("Type of Ward");

        wardcheckBox.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        wardcheckBox.setText("YES");
        wardcheckBox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wardcheckBoxActionPerformed(evt);
            }
        });

        TypeWards.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        TypeWards.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "General", "Single" }));
        TypeWards.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                TypeWardsActionPerformed(evt);
            }
        });

        Savedbtn.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        Savedbtn.setIcon(new javax.swing.ImageIcon(getClass().getResource("/save.png"))); // NOI18N
        Savedbtn.setText("Save");
        Savedbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SavedbtnActionPerformed(evt);
            }
        });

        jButton4.setFont(new java.awt.Font("Trebuchet MS", 1, 14)); // NOI18N
        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/cross.png"))); // NOI18N
        jButton4.setText("Close");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        jLabel8.setIcon(new javax.swing.ImageIcon(getClass().getResource("/search.png"))); // NOI18N
        jLabel8.setText("jLabel8");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(240, 240, 240)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(jLabel1)
                                .addGap(30, 30, 30)
                                .addComponent(pIDTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(9, 9, 9)
                                .addComponent(isExist)))
                        .addGap(30, 30, 30)
                        .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(31, 31, 31)
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 820, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(30, 30, 30)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 780, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(580, 580, 580)
                        .addComponent(Savedbtn)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(40, 40, 40)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 81, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4))
                        .addGap(59, 59, 59)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addComponent(medicalTextfield, javax.swing.GroupLayout.DEFAULT_SIZE, 188, Short.MAX_VALUE)
                            .addComponent(SymptomtextField)
                            .addComponent(DiaTextfield))
                        .addGap(185, 185, 185)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(typeWardslabel)
                            .addComponent(jLabel6))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(wardcheckBox)
                                .addGap(70, 70, 70))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(31, 31, 31)
                                .addComponent(TypeWards, javax.swing.GroupLayout.PREFERRED_SIZE, 109, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE)))))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel8)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createSequentialGroup()
                                        .addGap(3, 3, 3)
                                        .addComponent(pIDTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(4, 4, 4)
                                .addComponent(isExist))
                            .addComponent(Search, javax.swing.GroupLayout.PREFERRED_SIZE, 30, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addGap(2, 2, 2)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 51, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel5)
                        .addComponent(medicalTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(wardcheckBox)
                        .addComponent(jLabel6)))
                .addGap(32, 32, 32)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(SymptomtextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(typeWardslabel)
                        .addComponent(TypeWards, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(DiaTextfield, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(74, 74, 74)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButton4, javax.swing.GroupLayout.PREFERRED_SIZE, 33, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(Savedbtn))
                .addGap(16, 16, 16))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void SymptomtextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SymptomtextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SymptomtextFieldActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        setVisible(false);
    }//GEN-LAST:event_jButton4ActionPerformed

    private void wardcheckBoxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wardcheckBoxActionPerformed
        // TODO add your handling code here:
        if(wardcheckBox.isSelected()){
        typeWardslabel.setVisible(true);
        TypeWards.setVisible(true);
        }else{
        typeWardslabel.setVisible(false);
        TypeWards.setVisible(false);
     
        }
    }//GEN-LAST:event_wardcheckBoxActionPerformed

    private void SearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SearchActionPerformed
        // TODO add your handling code here:
     
String ID = pIDTextfield.getText();

        Connection con = null;
        Statement stmt = null;
        ResultSet result = null;

        if (checkPatientExistence(ID)) {
            try {
                con = DriverManager.getConnection(url);
                stmt = con.createStatement();
                String infoQuery = "SELECT * FROM Patiant_manu WHERE P_ID = '" + ID + "'";
                result = stmt.executeQuery(infoQuery);

                DefaultTableModel model = new DefaultTableModel();
                model.addColumn("ID");
                model.addColumn("Name");
                model.addColumn("Number");
                model.addColumn("Age");
                model.addColumn("Gender");
                model.addColumn("Blood");
                model.addColumn("Address");
                model.addColumn("Disease");

                while (result.next()) {
                    Object[] row = {
                        result.getInt("P_ID"),
                        result.getString("Name"),
                        result.getString("Number"),
                        result.getInt("Age"),
                        result.getString("Gender"),
                        result.getString("Blood"),
                        result.getString("Address"),
                        result.getString("Disease")
                    };
                    model.addRow(row);
                }
                jTable1.setModel(model);
            } catch (SQLException ex) {
                JOptionPane.showMessageDialog(null, "Error: " + ex.getMessage());
            } finally {
                try {
                    if (result != null) result.close();
                    if (stmt != null) stmt.close();
                    if (con != null) con.close();
                } catch (SQLException ex) {
                    ex.printStackTrace();
                    JOptionPane.showMessageDialog(null, "Error closing database resources: " + ex.getMessage());
                }
            }
        }
    }//GEN-LAST:event_SearchActionPerformed

    private void SavedbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SavedbtnActionPerformed
        // TODO add your handling code here:
        
        if(flag==1){
        String ID=pIDTextfield.getText();
        String symptom =SymptomtextField.getText();
        String diagnosis=DiaTextfield.getText();
        String medicals=medicalTextfield.getText();
        String wardReq;
        String typeWard;
        if(wardcheckBox.isSelected()){
        wardReq="YES";
        typeWard=(String)TypeWards.getSelectedItem();
        }else{
        
        wardReq="No";
        typeWard="";
        }
        
        try{
       Connection con = DriverManager.getConnection(url);
          Statement  stmt = con.createStatement();
          stmt.executeUpdate("UPDATE Patient_Info SET symptom = '" + symptom + "', diagnosis = '" + diagnosis +
                    "', medicines = '" + medicals + "', wardreq = '" + wardReq + "', typeward = '" + typeWard +
                    "' WHERE ID = " + ID);

        JOptionPane.showMessageDialog(null, "Successfuliy Updated");
            setVisible(false);
            new addDignosis().setVisible(true);
        }
        catch (Exception ex) {
            JOptionPane.showMessageDialog(null, ex);
            }
        
        }else{
        JOptionPane.showMessageDialog(null, "Patiant ID is empty");
        }
    }//GEN-LAST:event_SavedbtnActionPerformed

    private void TypeWardsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_TypeWardsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_TypeWardsActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(addDignosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(addDignosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(addDignosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(addDignosis.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new addDignosis().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField DiaTextfield;
    private javax.swing.JButton Savedbtn;
    private javax.swing.JButton Search;
    private javax.swing.JTextField SymptomtextField;
    private javax.swing.JComboBox<String> TypeWards;
    private javax.swing.JLabel isExist;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable jTable1;
    private javax.swing.JTextField medicalTextfield;
    private javax.swing.JTextField pIDTextfield;
    private javax.swing.JLabel typeWardslabel;
    private javax.swing.JCheckBox wardcheckBox;
    // End of variables declaration//GEN-END:variables
}
